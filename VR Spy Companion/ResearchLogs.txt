07/28/2023: Beginning of Logs

Doing this because Jay said its what scientists do. Getting a little bit of work done regarding file structure. 
Started work with calorimetry metrics and their parsing. Earlier this week worked on finishing up the loader and associated issues.

Daily TODO: (The idea is to do this everyday I work so I can keep track of what I have thought of getting done across time)

1. Loading and parsing calorimetry metrics. Mathing them to associated gameobjects
2. Separate muons from the track values in the track extras so that tracker muons don't get hidden in Unity.
3. Change where files get written to on local system. Don't save to desktop anymore.

08/01/2023:

Continuing to work on the above. The file structure stuff is done, leptons are stored as separate track files. Ethan said Jay didn't seem to care much about 
calorimetry but it still gets parsed out. Jay said he wanted individual track data shown so I wrote a function to parse
that out and include it in the totalData JSON file. I need to figure out how to separate the tracks out in an efficient
tracks so that we can pair the datas to specific objects. 

Daily TODO:
1. Investigate how to load tracks into unity as their own separate game objects. 
2. Separate muons from the track values in the track extras so that tracker muons don't get hidden in Unity.
3. Change where files get written to on local system. Don't save to desktop anymore.

08/02/2023:

Got some parsing stuff done on the unity side of things. I want to find out how to make an installer that also installs ADB.

08/03/2023:

More parsing stuff in Unity got done. I reworked the Jet functions as well such that the jets are contained in a singular file. 

08/04/2023:

Realizing I need to make the parser something that works without needing to compile. I also need to change everything
so that the file system is much cleaner. Got the delegate shit with the console.cancelkeypress done. Fixing things as well so 
that command line flags can be given via command line, such that different outcomes can be done. The parser's standard function
will be to make the files and then send them over to the Oculus. That's it. Then we can add flags to do stuff like saving the 
obj files to the desktop. Probably gonna have other flags but yeah. 

TODO:

1. I need to make a cleanup class. A class that will delete any temporary files that are generated. My idea is that it has 
multiple methods or delegates and the list of which ones will be called is to be determined by which rbanches of code are 
executed based on flags and arguments.
2. I need to grab the trackermuons from the track datas and extras so that we can actually see the trackermuons in the 
final scene.
3. I need to make the SuperCluster stuff.

8/12/2023

Stuff to do:

1) make installer (include ADB)
2) Do cleanup stuff

8/22/2023

So the other day I realized that there are a lot of geometric data points that count as extras, but arent included in extras.

This stuff is saved as "Points" and tehy apply to all muon types so I need to handle that. Be able to handle if the muon geometry is stored in Extras OR 
Points.

Ethan and I are going to work on fixing the datadisplay stuff tomorrow.
